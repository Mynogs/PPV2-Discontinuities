-- V1.0a AR
-- 30.12.2016 11:21:58 AR V1.0b
-- 21.06.2017 14:16:07 AR V1.0c
-- 22.06.2017 09:01:58 AR V1.0d
-- 14.07.2017 17:12:55 AR V1.0d

generic = {
  name = 'Relay',
  parameter = {
    onPoint = 1.0,
    offPoint = -1.0,
  },

  init = function(self)
    block.setInputsPinCount(1)
    block.setOutputsPinCount(1)
    block.setOutputPinTypeRestrains(1, 'boolean')
    block.modifyFlags('SupressStopFunctionCall', true)
  end,

  open = function(self)
    gui.add('Info', 'Info', self.name, "Output the specified 'on' or 'off' value by\ncomparing the input to the specified thresholds")
    gui.add('Edit', 'EditOnPoint', 'Switch on point')
    gui.set('EditOnPoint', 'Number', self.parameter.onPoint)
    gui.add('Edit', 'EditOffPoint', 'Switch off point')
    gui.set('EditOffPoint', 'Number', self.parameter.offPoint)
    gui.setSize()
  end,

  apply = function(self)
    self.parameter.onPoint = gui.get('EditOnPoint', 'Number')
    self.parameter.offPoint = gui.get('EditOffPoint', 'Number')
    return gui.assert(
      self.name,
      self.parameter.onPoint > self.parameter.offPoint, 'Switch on point must be greater then the switch off point')
  end,

  close = function()
  end,

  avatar = function(self)
    return block.getDefaultAvatar(0x50, "", [[
      draw.line(px(15), py(50), px(85), py(50))
      draw.line(px(50), py(15), px(50), py(85))
      draw.line(px(20), py(70), px(40), py(70), px(40), py(30), px(80), py(30))
      draw.line(px(40), py(70), px(60), py(70), px(60), py(30))
    ]])
  end,

  generate = function(self)
    local source =
      [==[
        local block = {}

          block.start = function()
            block.q = false
          end

          block.step = function(a)
            if a >= ON then
              block.q = true
            elseif a <= OFF then
              block.q = false
            end
            return block.q
          end

        return block
      ]==]
    local replaces = {
      ['ON'] = self.parameter.onPoint,
      ['OFF'] = self.parameter.offPoint,
    }
    return string.gsub(source, '%a+', replaces)
  end,

}

